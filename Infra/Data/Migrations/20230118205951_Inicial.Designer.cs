// <auto-generated />
using System;
using LanchesMac.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LanchesMac.Infra.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230118205951_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LanchesMac.Models.Categoria", b =>
                {
                    b.Property<int>("CategoriaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EditedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("CategoriaId");

                    b.ToTable("Categorias");

                    b.HasData(
                        new
                        {
                            CategoriaId = 1,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "anche feito com ingredientes normais",
                            EditedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Normal"
                        },
                        new
                        {
                            CategoriaId = 2,
                            CreatedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Descricao = "Lanche feito com ingredientes integrais e naturais",
                            EditedOn = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Nome = "Natural"
                        });
                });

            modelBuilder.Entity("LanchesMac.Models.Lanche", b =>
                {
                    b.Property<int>("LancheId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CategoriaId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("DescricaoCurta")
                        .IsRequired()
                        .HasMaxLength(120)
                        .HasColumnType("varchar(120)");

                    b.Property<string>("DescricaoLonga")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("EditedBy")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("EditedOn")
                        .HasColumnType("datetime(6)");

                    b.Property<bool>("EmEstoque")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("ImagemThumbnailUrl")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ImagemUrl")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<bool>("LanchePreferido")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("LancheId");

                    b.HasIndex("CategoriaId");

                    b.ToTable("Lanches");

                    b.HasData(
                        new
                        {
                            LancheId = 1,
                            CategoriaId = 1,
                            CreatedBy = "teste",
                            CreatedOn = new DateTime(2023, 1, 18, 17, 59, 50, 747, DateTimeKind.Local).AddTicks(5573),
                            DescricaoCurta = "Pão, Hamburger, ovo, presunto, queijo e batata palha",
                            DescricaoLonga = "Delicioso hamburger com ovo frito; presunto e queijo de primeira qualidade acompanhado com batata palha",
                            EditedBy = "teste",
                            EditedOn = new DateTime(2023, 1, 18, 17, 59, 50, 747, DateTimeKind.Local).AddTicks(5594),
                            EmEstoque = true,
                            ImagemUrl = "~/imagens/produtos/cheesesalada1.jpg",
                            LanchePreferido = false,
                            Nome = "Cheese Salada",
                            Preco = 12.50m
                        },
                        new
                        {
                            LancheId = 2,
                            CategoriaId = 1,
                            CreatedBy = "teste",
                            CreatedOn = new DateTime(2023, 1, 18, 17, 59, 50, 747, DateTimeKind.Local).AddTicks(5601),
                            DescricaoCurta = "Pão, presunto, mussarela e tomate",
                            DescricaoLonga = "Delicioso pão francês quentinho na chapa com presunto e mussarela bem servidos com tomate preparado com carinho",
                            EditedBy = "teste",
                            EditedOn = new DateTime(2023, 1, 18, 17, 59, 50, 747, DateTimeKind.Local).AddTicks(5603),
                            EmEstoque = true,
                            ImagemUrl = "~/imagens/produtos/mistoquente4.jpg",
                            LanchePreferido = false,
                            Nome = "Misto Quente",
                            Preco = 8.0m
                        },
                        new
                        {
                            LancheId = 3,
                            CategoriaId = 1,
                            CreatedBy = "teste",
                            CreatedOn = new DateTime(2023, 1, 18, 17, 59, 50, 747, DateTimeKind.Local).AddTicks(5607),
                            DescricaoCurta = "Pão, hambúrger, presunto, mussarela e batalha palha",
                            DescricaoLonga = "Pão de hambúrger especial com hambúrger de nossa preparação e presunto e mussarela; acompanha batata palha",
                            EditedBy = "teste",
                            EditedOn = new DateTime(2023, 1, 18, 17, 59, 50, 747, DateTimeKind.Local).AddTicks(5608),
                            EmEstoque = true,
                            ImagemUrl = "~/imagens/produtos/cheeseburger1.jpg",
                            LanchePreferido = false,
                            Nome = "Cheese Burger",
                            Preco = 11.0m
                        },
                        new
                        {
                            LancheId = 4,
                            CategoriaId = 2,
                            CreatedBy = "teste",
                            CreatedOn = new DateTime(2023, 1, 18, 17, 59, 50, 747, DateTimeKind.Local).AddTicks(5612),
                            DescricaoCurta = "Pão Integral, queijo branco, peito de peru, cenoura, alface, iogurte",
                            DescricaoLonga = "Pão integral natural com queijo branco, peito de peru e cenoura ralada com alface picado e iorgurte natural",
                            EditedBy = "teste",
                            EditedOn = new DateTime(2023, 1, 18, 17, 59, 50, 747, DateTimeKind.Local).AddTicks(5614),
                            EmEstoque = true,
                            ImagemUrl = "~/imagens/produtos/lanchenatural.jpg",
                            LanchePreferido = false,
                            Nome = "anche Natural Peito Peru",
                            Preco = 15.0m
                        });
                });

            modelBuilder.Entity("LanchesMac.Models.Lanche", b =>
                {
                    b.HasOne("LanchesMac.Models.Categoria", "Categoria")
                        .WithMany("Lanches")
                        .HasForeignKey("CategoriaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("LanchesMac.Models.Categoria", b =>
                {
                    b.Navigation("Lanches");
                });
#pragma warning restore 612, 618
        }
    }
}
